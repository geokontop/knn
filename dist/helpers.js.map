{"version":3,"sources":["../src/helpers.js"],"names":["path","require","fs","readline","helpers","baseDir","join","__dirname","csvtojsonTrainTestSet","filename","limit","callback","trainDataset","testDataset","rl","createInterface","input","createReadStream","crlfDelay","Infinity","i","labels","on","line","split","item","temp","val","Math","random","push","csvtojsonDataset","jsonArr","module","exports"],"mappings":";AACC;AACA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,KAAKD,QAAQ,IAAR,CAAT;AACA,MAAME,WAAWF,QAAQ,UAAR,CAAjB;;AAED;AACA,MAAMG,UAAU,EAAhB;;AAEA;AACAA,QAAQC,OAAR,GAAkBL,KAAKM,IAAL,CAAUC,SAAV,EAAoB,WAApB,CAAlB;;AAEA;AACAH,QAAQI,qBAAR,GAA8B,CAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,KAA6B;AACvD,UAAMC,eAAe,EAArB;AACA,UAAMC,cAAc,EAApB;;AAEA,UAAMC,KAAKX,SAASY,eAAT,CAAyB;AAChCC,eAAOd,GAAGe,gBAAH,CAAoBb,QAAQC,OAAR,GAAgBI,QAApC,CADyB;AAEhCS,mBAAWC;AAFqB,KAAzB,CAAX;;AAKA,QAAIC,IAAE,CAAN;AACA,QAAIC,SAAO,EAAX;;AAEAP,OAAGQ,EAAH,CAAM,MAAN,EAAeC,IAAD,IAAU;AACpB,YAAGH,MAAM,CAAT,EAAW;AACPC,qBAASE,KAAKC,KAAL,CAAW,GAAX,CAAT;AACH,SAFD,MAEK;AACDC,mBAAOF,KAAKC,KAAL,CAAW,GAAX,CAAP;AACA,kBAAME,OAAO,EAAb;AACA,iBAAI,IAAIC,GAAR,IAAeN,MAAf,EAAsB;AAClBK,qBAAKL,OAAOM,GAAP,CAAL,IAAoBF,KAAKE,GAAL,CAApB;AACH;AACD,gBAAGC,KAAKC,MAAL,KAAcnB,KAAjB,EAAuB;AACnBE,6BAAakB,IAAb,CAAkBJ,IAAlB;AACH,aAFD,MAEK;AACDb,4BAAYiB,IAAZ,CAAiBJ,IAAjB;AACH;AACJ;AACDN;AACH,KAhBD,EAgBGE,EAhBH,CAgBM,OAhBN,EAgBc,MAAI;AACdX,iBAASU,MAAT,EAAiBT,YAAjB,EAA+BC,WAA/B;AACH,KAlBD;AAmBH,CA/BD;;AAiCA;AACAT,QAAQ2B,gBAAR,GAAyB,CAACtB,QAAD,EAAWE,QAAX,KAAsB;;AAE3C,UAAMG,KAAKX,SAASY,eAAT,CAAyB;AAChCC,eAAOd,GAAGe,gBAAH,CAAoBb,QAAQC,OAAR,GAAgBI,QAApC,CADyB;AAEhCS,mBAAWC;AAFqB,KAAzB,CAAX;;AAKA,QAAIC,IAAE,CAAN;AACA,QAAIC,SAAO,EAAX;AACA,UAAMW,UAAQ,EAAd;;AAEAlB,OAAGQ,EAAH,CAAM,MAAN,EAAeC,IAAD,IAAU;AACpB,YAAGH,MAAM,CAAT,EAAW;AACPC,qBAASE,KAAKC,KAAL,CAAW,GAAX,CAAT;AACH,SAFD,MAEK;AACDC,mBAAOF,KAAKC,KAAL,CAAW,GAAX,CAAP;AACA,kBAAME,OAAO,EAAb;AACA,iBAAI,IAAIC,GAAR,IAAeN,MAAf,EAAsB;AAClBK,qBAAKL,OAAOM,GAAP,CAAL,IAAoBF,KAAKE,GAAL,CAApB;AACH;;AAEDK,oBAAQF,IAAR,CAAaJ,IAAb;AACH;AACDN;AACH,KAbD,EAaGE,EAbH,CAaM,OAbN,EAac,MAAI;AACdX,iBAASU,MAAT,EAAiBW,OAAjB;AACH,KAfD;AAgBH,CA3BD;;AA6BAC,OAAOC,OAAP,GAAiB9B,OAAjB","file":"helpers.js","sourcesContent":["\r\n // Dependencies\r\n var path = require('path');\r\n var fs = require('fs');\r\n const readline = require('readline');\r\n \r\n// Container\r\nconst helpers = {};\r\n\r\n// Base directory of the csv folder\r\nhelpers.baseDir = path.join(__dirname,'/../data/');\r\n\r\n// Read csv to create labels, trainSet and testSet\r\nhelpers.csvtojsonTrainTestSet=(filename, limit, callback)=>{\r\n    const trainDataset = [];\r\n    const testDataset = [];\r\n\r\n    const rl = readline.createInterface({\r\n        input: fs.createReadStream(helpers.baseDir+filename),\r\n        crlfDelay: Infinity\r\n    });\r\n    \r\n    let i=0;\r\n    let labels={};\r\n    \r\n    rl.on('line', (line) => {\r\n        if(i === 0){\r\n            labels = line.split(',');\r\n        }else{\r\n            item = line.split(',');\r\n            const temp = {};\r\n            for(let val in labels){\r\n                temp[labels[val]] = item[val];\r\n            }\r\n            if(Math.random()<limit){\r\n                trainDataset.push(temp);\r\n            }else{\r\n                testDataset.push(temp);\r\n            }\r\n        }\r\n        i++;\r\n    }).on('close',()=>{\r\n        callback(labels, trainDataset, testDataset);\r\n    });\r\n}\r\n\r\n// Read csv to create labels, trainSet and testSet\r\nhelpers.csvtojsonDataset=(filename, callback)=>{\r\n\r\n    const rl = readline.createInterface({\r\n        input: fs.createReadStream(helpers.baseDir+filename),\r\n        crlfDelay: Infinity\r\n    });\r\n    \r\n    let i=0;\r\n    let labels={};\r\n    const jsonArr=[];\r\n    \r\n    rl.on('line', (line) => {\r\n        if(i === 0){\r\n            labels = line.split(',');\r\n        }else{\r\n            item = line.split(',');\r\n            const temp = {};\r\n            for(let val in labels){\r\n                temp[labels[val]] = item[val];\r\n            }\r\n            \r\n            jsonArr.push(temp);\r\n        }\r\n        i++;\r\n    }).on('close',()=>{\r\n        callback(labels, jsonArr);\r\n    });\r\n}\r\n\r\nmodule.exports = helpers;"]}